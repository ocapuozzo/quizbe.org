{% extends '::base.html.twig' %}

{% block body %}

  {# {{ form(form) }}  #}

  <div class="panel panel-info">
    <div class="panel-heading">
      <h3 class="panel-title" style="text-align: center">
        {% if entity.id %}
        {{'form.question.title.edit' | trans}}
        {% else %}
        {{'form.question.title.create' | trans}}
        {% endif %}  
      </h3>
      
    </div>
    <div class="panel-body">
      {{ form_start(form) }}
      {{ form_errors(form) }}

      <div class="form-group">
        {{ form_label(form.name, 'form.question.name'|trans, {'label_attr': {'class': 'col-sm-1 control-label'}})}}
        {{ form_errors(form.name) }}
        <div class="col-sm-3">
          {{ form_widget(form.name, {'attr': {'class': 'form-control', 'placeholder':'short name'}}) }}
        </div>
        {{ form_label(form.codesigners, 'form.question.codesigners'|trans, {'label_attr': {'class': 'col-sm-1 control-label'}})}}
        {{ form_errors(form.codesigners) }}
        <div class="col-sm-3">
          {{ form_widget(form.codesigners, {'attr': {'class': 'form-control', 'placeholder':'co-author(s) and Co'}}) }}
        </div>
        {{ form_label(form.scope, 'form.question.scope' | trans, {'label_attr': {'class': 'col-sm-1 control-label'}})}}
        {{ form_errors(form.scope) }}
        <div class="col-sm-3">
          {{ form_widget(form.scope, {'attr': {'class': 'form-control'}}) }}
        </div>
      </div>

      <div class="form-group">
        {{ form_label(form.classroom, 'form.classroom'|trans, {'label_attr': {'class': 'col-sm-2 control-label'}})}}
        {{ form_errors(form.classroom) }}
        <div class="col-sm-10">
          {{ form_widget(form.classroom, {'attr': {'class': 'form-control'}}) }}
        </div>
      </div>

      <div class="form-group">
        {{ form_label(form.sentence, 'question'|trans ~ ':', {'label_attr': {'class': 'col-sm-2 control-label' }})}}
        {{ form_errors(form.sentence) }}
        <div class="col-sm-10">
          {{ form_widget(form.sentence) }}
        </div>
      </div>
      {#                  
           <div class="form-group responses" data-prototype="{{ form_widget(form.responses.vars.prototype)|e }}">
            <label class="col-sm-2 control-label required">Responses1</label>
              {% for resp in form.responses %}
                  {{ form_label(resp, 'Response', {'label_attr': {'class': 'col-sm-2 control-label'}})}}
                  {{ form_errors(resp) }}
                <div class="col-sm-10">
                  {{ form_widget(resp, {'attr': {'class': 'form-control'}}) }}
                </div>
              {% endfor %}
         </div>
      #}
      <div class="form-group">
        <div class="col-sm-2">
        {#  itérer sur les responses #}
        {# http://symfony.com/fr/doc/current/cookbook/form/form_collections.html #} 
        {{ form_label(form.responses, 'responses'|trans ~ ':', {'label_attr': {'class': 'control-label'}})}}
        </div>
         <div class="col-sm-10"></div>
     </div>
        <div class="form-group">
        <div class="col-sm-10">
          <ul class="items_prototype" 
              data-prototype="{#{ form_widget(form.responses.vars.prototype)|e }#}
              {% filter escape %}
                {{ include('AppBundle:Response:prototype.html.twig', { 'form': form.responses.vars.prototype }) }}
              {% endfilter %}">

            {% for resp in form.responses %}
              <li>                          
                {{ include('AppBundle:Response:prototype.html.twig', { 'form': resp }) }}             
                {# { form_row(resp) } #}
              </li>
            {% endfor %}
          </ul>
        </div>   
      </div>
 <div class="row">
    <div class="col-md-6">{{ form_row(form.submit) }}</div>
    <div class="col-md-6">
        {% if entity.datepub %}
       <span class="pull-right">{{'form.question.datepub'| trans}} : {{entity.datepub|date('form.question.formatdate'|trans)}}</span>
        {% else %}
          {% if entity.id %}
             <span class="pull-right">{{ form_widget(form.doPublish)}}</span>          
          {% else %} {# default doPub is checked #}
            <span class="pull-right">{{ form_widget(form.doPublish, {'attr': {'checked': 'checked'}})}}</span>          
        {% endif %}
        {% endif %}
    </div>
  </div>
      {#{ form_rest(form) }#}      
      {{ form_row(form._token) }}

      </form>
      <hr/>
      <div> 
        <div class="form-group col-sm-2 control-label">
          {% if delete_form is defined %}
            {{ form(delete_form) }} 
          {% endif %}
        </div>   
        <div class="form-group col-sm-2 control-label">
          <div style="margin-top: 5px;">
            <a href="{{ path('question') }}">
              Back to the list
            </a>
          </div>
        </div>
      </div>

    </div> <!-- panel body-->
  </div> <!-- panel info-->



{% endblock body %}

{% block javascripts %}
  {{ parent() }}
  
  {# { tinymce_init() } #}
  
  {{ tinymce_init({'mode' : "textareas", 'theme': {'simple': {'menubar': false}}}) }}
  
  {# après avoir inclus jquery... #} 

  <script>
    // Récupère le div qui contient la collection de tags
    var collectionHolder = $('ul.items_prototype');

    // ajoute un lien « add a response »
    var $addTagLink = $('<a href="#" class="add_reponse_link">{{'form.addproposition'|trans}}</a>');
    var $newLink = $('<li></li>').append($addTagLink);

    jQuery(document).ready(function () {

      // ajoute un lien de suppression à tous les éléments li de
      // formulaires de tag existants
      collectionHolder.find('li').each(function () {
        addTagFormDeleteLink($(this));
      });

      // ajoute l'ancre « ajouter une reponse» et li à la balise ul
      collectionHolder.append($newLink);

      $addTagLink.on('click', function (e) {
        // empêche le lien de créer un « # » dans l'URL
        e.preventDefault();

        // ajoute un nouveau formulaire Response 
        addResponseForm(collectionHolder, $newLink);
      });
      

    });

    function addResponseForm(collectionHolder, $newLink) {
      // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
      var prototype = collectionHolder.attr('data-prototype');

      // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
      // la longueur de la collection courante
      var newForm = prototype.replace(/__name__/g, collectionHolder.children().length);

      // Affiche le formulaire dans la page dans un div, avant le lien "ajouter un tag"
      var $newFormLi = $('<li></li>').append(newForm);
      $newLink.before($newFormLi);
      // ajoute un lien de suppression au nouveau formulaire
      addTagFormDeleteLink($newFormLi);
    }

    function addTagFormDeleteLink($tagFormLi) {
      var $removeFormA = $('<a href="#">{{'form.deleteproposition'|trans}}</a>');
      $tagFormLi.append($removeFormA);

      $removeFormA.on('click', function (e) {
        // empêche le lien de créer un « # » dans l'URL
        e.preventDefault();

        // supprime l'élément li pour le formulaire de tag
        $tagFormLi.remove();
      });
    }

  </script>

{% endblock javascripts %}